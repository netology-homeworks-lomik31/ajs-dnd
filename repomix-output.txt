================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

================================================================
Repository Structure
================================================================
.github/
  workflows/
    web.yml
src/
  css/
    style.css
  js/
    __tests__/
      app.test.js
    app.js
    card.js
    default-state.js
  index.html
  index.js
.editorconfig
.gitignore
eslint.config.mjs
package.json
README.md
webpack.common.js
webpack.dev.js
webpack.prod.js

================================================================
Repository Files
================================================================

================
File: .github/workflows/web.yml
================
name: Netology AHJ

on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  eslint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: 22.14.0
            cache: 'npm'
      - run: npm install
      - run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'npm'
      - run: npm install
      - run: npm run test

  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'npm'
      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libcups2 \
            libxkbcommon-x11-0 \
            libgbm-dev \
            libxshmfence1 \
            libnss3 \
            xdg-utils \
            libxrandr2 \
            libgtk-3-0 \
            libdrm2 \
            libxcomposite1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libpangocairo-1.0-0 \
            libpangoft2-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libcairo2
      - run: npm install
      - run: npm run e2e

  build:
    needs: [eslint, test, e2e]

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'npm'
      - run: npm install
      - run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

================
File: src/css/style.css
================
body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
    background-color: #F4F5F7;
    color: #333;
}

.container {
    display: flex;
    gap: 20px;
    padding: 20px;
    overflow-x: auto;
    min-height: 97vh;
}

.column {
    background-color: #EBECF0;
    border-radius: 12px;
    padding: 16px;
    /* min-width: 280px; */
    width: 320px;
    display: flex;
    flex-direction: column;
    gap: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease;
}

.column-title {
    font-size: 16px;
    font-weight: 600;
    color: #344563;
    padding-bottom: 8px;
    border-bottom: 2px solid #DFE1E6;
}

.add-card--btn {
    background-color: #5AAC44;
    color: #fff;
    border: none;
    padding: 10px 14px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    margin-top: 8px;
}

.add-card--btn:hover {
    background-color: #4C9A38;
}

.card {
    background-color: #FFF;
    padding: 12px;
    border-radius: 6px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    cursor: grab;
    transition: background-color 0.2s ease;
    font-size: 14px;
    position: relative;
    font-family: inherit;
}

.card:active {
    cursor: grabbing;
    background-color: #F0F0F0;
}

.card + .card {
    margin-top: 8px;
}

.new-card--text-input {
    width: 100%;
    padding: 8px;
    border: 1px solid #DFE1E6;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.2s ease;
    box-sizing: border-box;
    resize: none;
    height: auto;
    font-family: inherit;
}

.new-card--text-input:focus-visible {
    /* border-style: none; */
    outline: none;
}

.remove-card--btn {
    background-color: #00000000;
    color: #fff;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    position: absolute;
    right: 5px;
    top: 5px;
    display: none;
}

.remove-card--btn:hover {
    background-color: #00000021;
}

.dragged-card {
    position: absolute;
    z-index: 10;
    background-color: #FFF;
}

================
File: src/js/__tests__/app.test.js
================
test("testasd", () => {
    expect(1).toBe(1);
});

================
File: src/js/app.js
================
import { Card } from "./card";
import defaultState from "./default-state";

function initCards() {
    let cards = JSON.parse(localStorage.getItem("cards")) || (localStorage.setItem("cards", JSON.stringify(defaultState, " ")) && defaultState);
    let columns = document.querySelectorAll(".column");
    columns.forEach((column, index) => {
        cards[index].forEach(cardText => {
            new Card(column.querySelector(".column-content"), cardText);
        });
    });
}

function saveCards() {
    let columns = document.querySelectorAll(".column");
    let cards = [];
    columns.forEach(column => {
        let column_cards = [];
        column.querySelectorAll(".card").forEach(card => {
            column_cards.push(card.textContent);
        });
        cards.push(column_cards);
    });
    localStorage.setItem("cards", JSON.stringify(cards));
}


document.addEventListener("DOMContentLoaded", () => {
    initCards();
    const addCardButtons = document.querySelectorAll(".add-card--btn");
    addCardButtons.forEach(button => {
        button.addEventListener("click", event => {
            const column = event.target.closest(".column");
            let new_card = new Card(column.querySelector(".column-content"), "");
            new_card.updateText();
        });
    });

    window.addEventListener("beforeunload", () => {
        // saveCards();
    });
});

================
File: src/js/card.js
================
export class Card {
    constructor(parent, text) {
        this.parent = parent;
        this.text = text;
        this.self = undefined;
        this.render();
    }

    render() {
        const card = document.createElement("div");
        card.className = 'card';
        card.textContent = this.text;
        this.parent.appendChild(card);
        this.self = card;

        const removeButton = document.createElement("button");
        removeButton.className = "remove-card--btn";
        removeButton.textContent = "✖️";
        card.appendChild(removeButton);
        this.removeButton = removeButton;

        this.removeButton.addEventListener("click", () => {
            this.remove();
        });
        this.self.addEventListener("mouseover", () => {
            this.removeButton.style.display = "block";
        });
        this.self.addEventListener("mouseleave", () => {
            this.removeButton.style.display = "none";
        });
        this.self.addEventListener("mousedown", (e) => {
            document.addEventListener("mousemove", (e) => {});
        })

    }

    remove() {
        this.self.remove();
    }

    updateText() {
        let textarea = document.createElement("textarea");
        textarea.className = "new-card--text-input";
        textarea.placeholder = "Add a title for this card...";
        textarea.addEventListener("blur", () => {
            this.remove();
        });
        textarea.addEventListener("input", () => {
            textarea.style.height = "auto";
            textarea.style.height = textarea.scrollHeight + "px";
        });
        textarea.addEventListener("keydown", (e) => {
            if (e.key === "Enter") {
                if (e.shiftKey) return;
                this.text = textarea.value;
                const textNode = document.createTextNode(this.text);
                this.self.insertBefore(textNode, this.self.firstChild);
                textarea.remove();
            } else if (e.key === "Escape") {
                this.remove();
            }
        });
        this.self.appendChild(textarea);
        textarea.focus();
    }
}

================
File: src/js/default-state.js
================
export default [
    [
        "Welcome to Trello!",
        "This is a card.",
        "Click on the card to see what's behind it.",
        "You can attach pictures and files...",
        "... any kind of hyperlink ...",
        "... or checklists.",
    ],
    [
        "Invite your team to this board using the Add Members button",
        "Drag people onto cards to indicate they're responsible for it",
        "Use color-coded labels for organization",
        "Make as many lists as you need!",
        "Try dragging cards anywhere",
        "Finished with a card? Archive it.",
    ],
    [
        "To learn more tricks, check out the guide.",
        "Use as many boards as you want.\nWe'll make more!",
        "Want to use keyboard shortcuts? We have them!",
        "Want updates on new features?",
        "Need help?",
        "Want current tips, examples, or API info?",
    ],
]

================
File: src/index.html
================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
</head>
<body>
<div class="container">
    <div class="column" data-column="todo">
        <div class="column-title">TODO</div>
        <div class="column-content"></div>
        <button class="add-card--btn">+ Add Card</button>
    </div>
    <div class="column" data-column="in-progress">
        <div class="column-title">IN PROGRESS</div>
        <div class="column-content"></div>
        <button class="add-card--btn">+ Add Card</button>
    </div>
    <div class="column" data-column="done">
        <div class="column-title">DONE</div>
        <div class="column-content"></div>
        <button class="add-card--btn">+ Add Card</button>
    </div>
</div>
</body>
</html>

================
File: src/index.js
================
import "./css/style.css";

import "./js/app";

// TODO: write your code in app.js

================
File: .editorconfig
================
# Editor configuration, see https://editorconfig.org
root = true

[*]
end_of_line = lf
charset = utf-8
indent_style = space
indent_size = 2
insert_final_newline = true

[*.md]
max_line_length = off
trim_trailing_whitespace = false

================
File: .gitignore
================
# File created using '.gitignore Generator' for Visual Studio Code: https://bit.ly/vscode-gig
# Created by https://www.toptal.com/developers/gitignore/api/node,web
# Edit at https://www.toptal.com/developers/gitignore?templates=node,web

### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

### Node Patch ###
# Serverless Webpack directories
.webpack/

# Optional stylelint cache

# SvelteKit build / generate output
.svelte-kit

# End of https://www.toptal.com/developers/gitignore/api/node

# Custom rules (everything added below won't be overriden by 'Generate .gitignore File' if you use 'Update' option)

# TypeScript v1 declaration files
typings/

================
File: eslint.config.mjs
================
import globals from "globals";
import pluginJs from "@eslint/js";
import jest from "eslint-plugin-jest";
import eslintPluginPrettierRecommended from "eslint-plugin-prettier/recommended";

export default [
    {
        languageOptions: { globals: { ...globals.browser, ...globals.node } },
    },
    pluginJs.configs.recommended,
    eslintPluginPrettierRecommended,
    {
        rules: {
            "no-unused-vars": "warn",
            indent: ["error", 4],
            "prettier/prettier": ["error", { tabWidth: 4, useTabs: false }],
        },
    },
    {
        ignores: ["dist/*"],
    },
    {
        files: ["**/*.test.js"],
        ...jest.configs["flat/recommended"],
        rules: {
            ...jest.configs["flat/recommended"].rules,
            "jest/prefer-expect-assertions": "off",
        },
    },
];

================
File: package.json
================
{
  "name": "ajs-dnd",
  "version": "1.0.0",
  "description": "",
  "homepage": "https://github.com/netology-homeworks-lomik31/ajs-dnd#readme",
  "bugs": {
    "url": "https://github.com/netology-homeworks-lomik31/ajs-dnd/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/netology-homeworks-lomik31/ajs-dnd.git"
  },
  "license": "ISC",
  "author": "",
  "main": "index.js",
  "scripts": {
    "start": "webpack serve --config webpack.dev.js",
    "build": "webpack --config webpack.prod.js",
    "lint": "eslint . --ignore-pattern node_modules/",
    "test": "jest --testPathPattern src/js/",
    "coverage": "jest --coverage",
    "e2e": "jest --testPathPattern=./e2e/ --runInBand",
    "preshow:coverage": "npm run coverage",
    "show:coverage": "live-server coverage/lcov-report",
    "preshow:dist": "npm run build",
    "show:dist": "http-server dist"
  },
  "devDependencies": {
    "copy-webpack-plugin": "^13.0.0",
    "css-loader": "7.1.2",
    "css-minimizer-webpack-plugin": "7.0.0",
    "eslint": "9.20.0",
    "eslint-plugin-jest": "28.11.0",
    "html-loader": "5.1.0",
    "html-webpack-plugin": "5.6.3",
    "http-server": "14.1.1",
    "jest": "^29.7.0",
    "mini-css-extract-plugin": "2.9.2",
    "terser-webpack-plugin": "5.3.11",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1",
    "webpack-dev-server": "^5.2.0",
    "webpack-merge": "6.0.1"
  },
  "dependencies": {
    "puppeteer": "^24.4.0"
  }
}

================
File: README.md
================
# Forms
[![Netology AHJ](https://github.com/netology-homeworks-lomik31/ajs-forms/actions/workflows/web.yml/badge.svg)](https://github.com/netology-homeworks-lomik31/ajs-forms/actions/workflows/web.yml)

[Руководство по настройке Webpack](https://webpack.js.org/guides/)
[Руководство по настройке GitHub Actions](https://docs.github.com/en/actions/quickstart)

================
File: webpack.common.js
================
const path = require("path");
const HtmlWebPackPlugin = require("html-webpack-plugin");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");

module.exports = {
    target: "web",
    devtool: "source-map",
    output: {
        path: path.resolve(__dirname, "dist"),
        publicPath: "",
    },
    module: {
        rules: [
            {
                test: /\.html$/,
                use: [
                    {
                        loader: "html-loader",
                    },
                ],
            },
            {
                test: /\.css$/,
                use: [MiniCssExtractPlugin.loader, "css-loader"],
            },
            {
                test: /\.(png|svg|jpg|jpeg|gif)$/i,
                type: "asset/resource",
                generator: {
                    filename: "img/[name][ext]",
                },
            },
        ],
    },
    plugins: [
        new HtmlWebPackPlugin({
            template: "./src/index.html",
            filename: "./index.html",
        }),
        new MiniCssExtractPlugin({
            filename: "[name].css",
            chunkFilename: "[id].css",
        }),
    ],
};

================
File: webpack.dev.js
================
const webpack = require("webpack");
const { merge } = require("webpack-merge");
const common = require("./webpack.common");

module.exports = merge(common, {
    // Set the mode to development or production
    mode: "development",
    // Control how source maps are generated
    devtool: "inline-source-map",

    // Spin up a server for quick development
    devServer: {
        historyApiFallback: true,
        open: true,
        compress: true,
    },

    plugins: [
        // Only update what has changed on hot reload
        new webpack.HotModuleReplacementPlugin(),
    ],
});

================
File: webpack.prod.js
================
const { merge } = require("webpack-merge");
const common = require("./webpack.common");
const CssMinimizerPlugin = require("css-minimizer-webpack-plugin");
const TerserPlugin = require("terser-webpack-plugin");

module.exports = merge(common, {
    mode: "production",
    optimization: {
        minimize: true,
        minimizer: [new TerserPlugin(), new CssMinimizerPlugin()],
    },
});
